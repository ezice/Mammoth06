# -*- coding: utf-8 -*-
"""Movie Recommender with Machine Learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/106Gtd93VDK9_4Xsrn43Wz0xjL47bQpMa

https://colab.research.google.com/

Data Download Link: https://files.grouplens.org/datasets/movielens/ml-latest-small.zip

Data Source: https://grouplens.org/datasets/movielens/latest/
"""

'''
@article{10.1145/2827872,
author = {Harper, F. Maxwell and Konstan, Joseph A.},
title = {The MovieLens Datasets: History and Context},
year = {2015},
issue_date = {January 2016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {5},
number = {4},
issn = {2160-6455},
url = {https://doi.org/10.1145/2827872},
doi = {10.1145/2827872},
journal = {ACM Trans. Interact. Intell. Syst.},
month = dec,
articleno = {19},
numpages = {19},
keywords = {Datasets, recommendations, ratings, MovieLens}
}
'''

import pandas

movies_dataframe = pandas.read_csv("movies.csv")

movies_dataframe

movies_dataframe.set_index("movieId", inplace = True)

movies_dataframe

ratings_dataframe = pandas.read_csv("ratings.csv")

ratings_dataframe

total_counts = ratings_dataframe["movieId"].value_counts()

total_counts

movies_dataframe["ratingsCount"] = total_counts

movies_dataframe

SEGMENT_LENGTH = 10

movies_dataframe.sort_values("ratingsCount", ascending = False).head(SEGMENT_LENGTH)

average_ratings = ratings_dataframe.groupby("movieId").mean()["rating"]

average_ratings

movies_dataframe["averageRating"] = average_ratings

movies_dataframe

movies_dataframe.sort_values(["ratingsCount", "averageRating"],
                             ascending = False).head(SEGMENT_LENGTH)

MINIMUM_RATINGS_COUNT = 100

minimum_ratings_subset = movies_dataframe.query(f"ratingsCount >= {MINIMUM_RATINGS_COUNT}").sort_values("ratingsCount")

minimum_ratings_subset